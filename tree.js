// Generated by CoffeeScript 1.4.0
(function() {
  var tree;

  tree = {
    init: function() {
      return tree.fetch("thmzlt", "tones", "", function(responseData) {
        var node, _i, _len;
        for (_i = 0, _len = responseData.length; _i < _len; _i++) {
          node = responseData[_i];
          $("#root").append(tree.nodeTag(node));
        }
        $("#root").on("click", "a.file", function() {
          return chrome.tabs.update({
            url: $(this).attr("href")
          });
        });
        return $("#root").on("click", "a.dir", function() {
          var el, url;
          el = $(this);
          if (el.attr("state") === "open") {
            el.attr("state", "closed");
            return el.parent().children("div").remove();
          } else {
            el.attr("state", "open");
            url = el.attr("href");
            return tree.fetchContents(url, function(data) {
              var _j, _len1, _results;
              _results = [];
              for (_j = 0, _len1 = data.length; _j < _len1; _j++) {
                node = data[_j];
                _results.push(el.parent().append(tree.nodeTag(node)));
              }
              return _results;
            });
          }
        });
      });
    },
    nodeTag: function(node) {
      var out;
      return out = "<div class=\"node " + node.type + "\">\n  <a href=\"" + (node.type === "dir" ? node.url : node.html_url) + "\" class=\"" + node.type + "\">" + node.name + "</a>\n</div>";
    },
    nodeTree: function(data) {
      var node, out, _i, _len;
      out = "";
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        node = data[_i];
        out += nodeTag(node);
      }
      return out;
    },
    fetchContents: function(url, callback) {
      var results;
      return results = $.getJSON(url, function(data) {
        return callback(data);
      });
    },
    fetch: function(owner, repo, path, callback) {
      var results;
      return results = $.getJSON("https://api.github.com/repos/" + owner + "/" + repo + "/contents/" + path, function(data) {
        return callback(data);
      });
    }
  };

  $(function() {
    return tree.init();
  });

}).call(this);
